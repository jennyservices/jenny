// Automatically generated by Jenny. DO NOT EDIT!

// Package v1 as generated by Jenny
// Please read about it
package v1

import (
	"net"
	"net/http"
	"net/url"
	"time"

	"github.com/jennyservices/jenny/options"
	"github.com/gorilla/mux"
)

// TestService1 as generated by Jenny
// Please read more at
type TestService1 interface {
}

type Error struct {
	StringFieldURL      *bool      // This describes the first field
	StringFieldURL      *net.IP    // This describes the first field
	IntegerField        *int       // This describes the first field
	IntegerField        *int32     // This describes the first field
	IntegerField        *int64     // This describes the first field
	NumberField         *int       // This describes the first field
	NumberFieldDouble   *float64   // This describes the first field
	NumberFieldFloat    *float64   // This describes the first field
	StringField         *string    // This describes the first field
	StringFieldByte     []byte     // This describes the first field
	StringFieldDate     *time.Time // This describes the first field
	StringFieldPassword *string    // This describes the first field
	StringFieldURL      *url.URL   // This describes the first field
}

// HTTP transport after this

// HTTP encoders
const ct = "Content-Type"

// HTTP decoders

// NewTestService1HTTPServer returns a HTTPHandler that can be used with the go std http package
func NewTestService1HTTPServer(svc TestService1, opts ...options.Option) http.Handler {
	r := mux.NewRouter()
	svcOptions := options.New()
	for _, optf := range opts {
		optf(svcOptions)
	}

	return r
}
