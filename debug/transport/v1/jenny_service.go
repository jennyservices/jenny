// Automatically generated by Jenny. DO NOT EDIT!

// Package v1 as generated by Jenny
// Please read about it https://localhost:8080/_spec
package v1

import (
	"context"

	"github.com/Typeform/jenny/options"
	"github.com/go-kit/kit/endpoint"
)

// Debug as generated by Jenny
// Please read more at https://localhost:8080/_spec
type Debug interface {

	// GetService returns a services details
	GetService(ctx context.Context, Name string) (Body []byte, err error)

	// GetTrip get a specific request and response
	GetTrip(ctx context.Context, ID string) (Body *Trip, err error)

	// Run The logs of the last run
	Run(ctx context.Context) (Body *Run, err error)

	// Services Returns a list of registered services
	Services(ctx context.Context) (Body []Service, err error)

	// Trips List debugged trips
	Trips(ctx context.Context) (Body []Trip, err error)
}

// Header is generated from a swagger definition
type Header struct {
	Key    string   `json:"key"`              // key is generated from a swagger definition
	Values []string `json:"values,omitempty"` // values is generated from a swagger definition
}

// Request is generated from a swagger definition
type Request struct {
	Body    []byte   `json:"body,omitempty"` // body is generated from a swagger definition
	Headers []Header `json:"headers"`        // headers is generated from a swagger definition
	Method  string   `json:"method"`         // method is generated from a swagger definition
	URL     string   `json:"url"`            // url is generated from a swagger definition
}

// Response is generated from a swagger definition
type Response struct {
	Body    []byte   `json:"body,omitempty"` // body is generated from a swagger definition
	Headers []Header `json:"headers"`        // headers is generated from a swagger definition
	Status  int      `json:"status"`         // status is generated from a swagger definition
}

// Run is generated from a swagger definition
type Run struct {
	Addr    *string `json:"addr,omitempty"`    // addr is generated from a swagger definition
	Builder []byte  `json:"builder,omitempty"` // builder is generated from a swagger definition
	Pid     *int    `json:"pid,omitempty"`     // pid is generated from a swagger definition
	Runner  []byte  `json:"runner,omitempty"`  // runner is generated from a swagger definition
}

// Service is generated from a swagger definition
type Service struct {
	Docker            bool    `json:"docker"`                       // docker is generated from a swagger definition
	Healthy           bool    `json:"healthy"`                      // healthy is generated from a swagger definition
	Name              string  `json:"name"`                         // name is generated from a swagger definition
	Ready             bool    `json:"ready"`                        // ready is generated from a swagger definition
	Swagger           bool    `json:"swagger"`                      // swagger is generated from a swagger definition
	SwaggerDefinition *string `json:"swagger_definition,omitempty"` // swagger_definition is generated from a swagger definition
}

// Trip is generated from a swagger definition
type Trip struct {
	Duration    int64     `json:"duration"`           // duration is generated from a swagger definition
	ID          string    `json:"id"`                 // id is generated from a swagger definition
	Method      string    `json:"method"`             // method is generated from a swagger definition
	OperationID string    `json:"operationId"`        // operationId is generated from a swagger definition
	Request     *Request  `json:"request,omitempty"`  // request is generated from a swagger definition
	Response    *Response `json:"response,omitempty"` // response is generated from a swagger definition
	Status      int       `json:"status"`             // status is generated from a swagger definition
	Test        []byte    `json:"test"`               // test is generated from a swagger definition
	URL         string    `json:"url"`                // url is generated from a swagger definition
}

// _getServiceRequest is not to be used outside of this file.
// see https://gokit.io/examples/stringsvc.html#requests-and-responses for more detail
type _getServiceRequest struct {
	Name string `json:"name"` // name of the service to return

}

// _getTripRequest is not to be used outside of this file.
// see https://gokit.io/examples/stringsvc.html#requests-and-responses for more detail
type _getTripRequest struct {
	ID string `json:"id"` // name of the service to return

}

// _runRequest is not to be used outside of this file.
// see https://gokit.io/examples/stringsvc.html#requests-and-responses for more detail
type _runRequest struct {
}

// _servicesRequest is not to be used outside of this file.
// see https://gokit.io/examples/stringsvc.html#requests-and-responses for more detail
type _servicesRequest struct {
}

// _tripsRequest is not to be used outside of this file.
// see https://gokit.io/examples/stringsvc.html#requests-and-responses for more detail
type _tripsRequest struct {
}

// _getServiceResponse is not to be used outside of this file.
// see https://gokit.io/examples/stringsvc.html#requests-and-responses for more detail
type _getServiceResponse struct {
	Body []byte `json:"body,omitempty"` // body is generated from a swagger definition

}

// _getTripResponse is not to be used outside of this file.
// see https://gokit.io/examples/stringsvc.html#requests-and-responses for more detail
type _getTripResponse struct {
	Body *Trip `json:"body,omitempty"` // body is generated from a swagger definition

}

// _runResponse is not to be used outside of this file.
// see https://gokit.io/examples/stringsvc.html#requests-and-responses for more detail
type _runResponse struct {
	Body *Run `json:"body,omitempty"` // body is generated from a swagger definition

}

// _servicesResponse is not to be used outside of this file.
// see https://gokit.io/examples/stringsvc.html#requests-and-responses for more detail
type _servicesResponse struct {
	Body []Service `json:"body,omitempty"` // body is generated from a swagger definition

}

// _tripsResponse is not to be used outside of this file.
// see https://gokit.io/examples/stringsvc.html#requests-and-responses for more detail
type _tripsResponse struct {
	Body []Trip `json:"body,omitempty"` // body is generated from a swagger definition

}

// endpoints as used in https://gokit.io/examples/stringsvc.html#endpoints
func makeGetServiceEndpoint(svc Debug, opts *options.Options) endpoint.Endpoint {
	getServiceEndpoint := func(ctx context.Context, request interface{}) (interface{}, error) {

		req := request.(_getServiceRequest)

		resp := _getServiceResponse{}
		var err error

		resp.Body, err = svc.GetService(ctx, req.Name)

		return resp, err
	}

	getServiceMiddleware := opts.OpMiddlewares("GetService")

	return getServiceMiddleware(getServiceEndpoint)
}

// endpoints as used in https://gokit.io/examples/stringsvc.html#endpoints
func makeGetTripEndpoint(svc Debug, opts *options.Options) endpoint.Endpoint {
	getTripEndpoint := func(ctx context.Context, request interface{}) (interface{}, error) {

		req := request.(_getTripRequest)

		resp := _getTripResponse{}
		var err error

		resp.Body, err = svc.GetTrip(ctx, req.ID)

		return resp, err
	}

	getTripMiddleware := opts.OpMiddlewares("GetTrip")

	return getTripMiddleware(getTripEndpoint)
}

// endpoints as used in https://gokit.io/examples/stringsvc.html#endpoints
func makeRunEndpoint(svc Debug, opts *options.Options) endpoint.Endpoint {
	runEndpoint := func(ctx context.Context, request interface{}) (interface{}, error) {

		resp := _runResponse{}
		var err error

		resp.Body, err = svc.Run(ctx)

		return resp, err
	}

	runMiddleware := opts.OpMiddlewares("Run")

	return runMiddleware(runEndpoint)
}

// endpoints as used in https://gokit.io/examples/stringsvc.html#endpoints
func makeServicesEndpoint(svc Debug, opts *options.Options) endpoint.Endpoint {
	servicesEndpoint := func(ctx context.Context, request interface{}) (interface{}, error) {

		resp := _servicesResponse{}
		var err error

		resp.Body, err = svc.Services(ctx)

		return resp, err
	}

	servicesMiddleware := opts.OpMiddlewares("Services")

	return servicesMiddleware(servicesEndpoint)
}

// endpoints as used in https://gokit.io/examples/stringsvc.html#endpoints
func makeTripsEndpoint(svc Debug, opts *options.Options) endpoint.Endpoint {
	tripsEndpoint := func(ctx context.Context, request interface{}) (interface{}, error) {

		resp := _tripsResponse{}
		var err error

		resp.Body, err = svc.Trips(ctx)

		return resp, err
	}

	tripsMiddleware := opts.OpMiddlewares("Trips")

	return tripsMiddleware(tripsEndpoint)
}
