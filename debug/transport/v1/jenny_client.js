// @flow
// Automatically generated by Jenny. DO NOT EDIT!
import { createStore } from 'redux'


GetService = "GetService"

GetTrip = "GetTrip"

Run = "Run"

Services = "Services"

Trips = "Trips"


class DebugClient {
  constructor() {
    super( )
  }
  baseURL = ""

  GetService( Name: string,) : string  {
  return {
    type: GetService,
    header: {   },
    query: {   },
    path: {  Name: string,  }
   }
}

  GetTrip( ID: string,) : Trip  {
  return {
    type: GetTrip,
    header: {   },
    query: {   },
    path: {  ID: string,  }
   }
}

  Run() : Run  {
  return {
    type: Run,
    header: {  },
    query: {  },
    path: {  }
   }
}

  Services() : Service[]  {
  return {
    type: Services,
    header: {  },
    query: {  },
    path: {  }
   }
}

  Trips() : Trip[]  {
  return {
    type: Trips,
    header: {  },
    query: {  },
    path: {  }
   }
}

}



type Header = {
    key?: string,
  values: string[],
}

type Request = {
    body: string,
  headers?: Header[],
  method?: string,
  url?: string,
}

type Response = {
    body: string,
  headers?: Header[],
  status?: integer,
}

type Run = {
    addr: string,
  builder: string,
  pid: number,
  runner: string,
}

type Service = {
    docker?: boolean,
  healthy?: boolean,
  name?: string,
  ready?: boolean,
  swagger?: boolean,
  swagger_definition: string,
}

type Trip = {
    duration?: integer,
  id?: string,
  method?: string,
  operationId?: string,
  request: Request,
  response: Response,
  status?: integer,
  test?: string,
  url?: string,
}

