---
swagger: '2.0'
info:
  version: 1.0.0
  title: Debug
  contact:
    name: sevki
    email: s@sevki.org
paths:
  /services:
    get:
      tags:
        - debug
      summary: Returns a list of registered services
      operationId: services
      produces:
        - application/json
        - application/xml
      responses:
        200:
          schema:
              type: array
              items:
                $ref: '#/definitions/Service'
  /services/{name}:
    get:
      tags:
        - debug
      summary: returns a services details
      operationId: getService
      consumes:
        - application/json
      produces:
        - application/octet-stream
      parameters:
        - name: name
          in: path
          description: name of the service to return
          required: true
          type: string
      responses:
        200:
          schema:
            type: string
            format: byte
  /trips:
    get:
      tags:
      - debug
      summary: List debugged trips
      description: |
        Trips lists the debug information for a jenny service
      operationId: trips
      produces:
        - application/json
      responses:
        200:
          schema:
              type: array
              items:
                $ref: '#/definitions/Trip'
  /trips/{id}:
    get:
      tags:
      - debug
      summary: get a specific request and response
      operationId: getTrip
      parameters:
        - name: id
          in: path
          description: name of the service to return
          required: true
          type: string
      produces:
        - application/json
      responses:
        200:
          schema:
              $ref: '#/definitions/Trip'
  /run:
    get:
      tags:
        - debug
      summary: The logs of the last run
      description: |
        The logs of the last run
      operationId: run
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - application/x-www-form-urlencoded
      responses:
        200:
          schema:
            $ref: '#/definitions/Run'
  /api/{id}/store/:
    post:
      tags:
        - debug
      summary: The logs of the last run
      description: |
        The logs of the last run
      operationId: NewError
      parameters:
        - name: id
          in: path
          description: name of the service to return
          required: true
          type: string
        - name: pkt
          in: body
          required: true
          schema:
            $ref: '#/definitions/Packet'
      consumes:
        - application/json
        - application/octet-stream
      produces:
        - application/json
        - application/x-www-form-urlencoded
      responses:
        200:
          schema:
            $ref: '#/definitions/ErrorResponse'
definitions:
  Service:
    properties:
      name:
        type: string
      swagger_definition:
        type: string
      swagger:
        type: boolean
      docker:
        type: boolean
      healthy:
        type: boolean
      ready:
        type: boolean
    required:
      - name
      - healthy
      - ready
      - docker
      - swagger
  Request:
    properties:
      url:
        type: string
      method:
        type: string
      body:
        type: string
        format: byte
      headers:
        type: array
        items:
          $ref: '#/definitions/Header'
    required:
      - url
      - method
      - headers
  Response:
    properties:
      status:
        type: number
      body:
        type: string
        format: byte
      headers:
        type: array
        items:
          $ref: '#/definitions/Header'
    required:
      - status
      - headers
  Header:
    properties:
      key:
        type: string
      values:
        type: array
        items:
          type: string
    required:
      - key

  Trip:
    properties:
      id:
        type: string
      duration:
        type: number
      test:
        type: string
        format: byte
      method:
        type: string
      status:
        type: number
      operationId:
        type: string
      url:
        type: string
      errors:
        type: array
        items:
          $ref: '#/definitions/Packet'
      request:
        "$ref": "#/definitions/Request"
      response:
        "$ref": "#/definitions/Response"
    required:
      - id
      - duration
      - test
      - method
      - status
      - operationId
      - url
  Run:
    properties:
      runner:
        type: string
        format: byte
      builder:
        type: string
        format: byte
      addr:
        type: string
      pid:
        type: number
  Packet:
    properties:
      message:
        type: string
      event_id:
        type: string
      project:
        type: string
      level:
        type: string
      logger:
        type: string
      platform:
        type: string
      server_name:
        type: string
      tags:
        type: "[][]string"
      exception:
        $ref: '#/definitions/Exception'
      extra:
        $ref: '#/definitions/ExtraInfo'
    required:
      - message
      - event_id
      - project
      - level
      - logger
      - platform
      - server_name
  ExtraInfo:
    properties:
      x_request_id:
        type: string
  Exception:
    properties:
      value:
        type: string
      type:
        type: string
      stacktrace:
        $ref: '#/definitions/StackTrace'
    required: [value,type]
  StackTrace:
    properties:
      frames:
        type: array
        items:
          $ref: '#/definitions/Frame'
  Frame:
    properties:
      filename:
        type: string
      function:
        type: string
      module:
        type: string
      lineno:
        type: number
      abs_path:
        type: string
      context_line:
        type: string
      pre_context:
        type: array
        items:
          type: string
      post_context:
        type: array
        items:
          type: string
      in_app:
        type: boolean
    required: [filename, function, module, lineno, abs_path, context_line, in_app]
  ErrorResponse:
    properties:
      wrote:
        type: boolean
    required: [wrote]
