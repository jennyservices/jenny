{{ define "service" }}
export default class {{.Name }}Client {
  constructor(baseurl: string) {
    this.baseURL=baseurl
   }
  baseURL = "{{.BaseURL}}"
{{ range .Resources }}
  {{ template "endpoint" . }}
{{ end }}
}
{{ end }}

{{ define "endpoint" -}}
async {{ .Name }}({{ range .Parameters }} {{template "ident" .}},{{ end }}) : Promise<{{  template "responses" . }}>  {
  let pathMaker = matchstick(this.baseURL+`{{.Path}}`, 'template');
  let path = pathMaker.stick({ {{ range .Parameters }} {{ .CannonicalName }}: {{ .Name }},{{ end }} })
  let u = url.parse(path)
  let data : {{ template "responses" . }}  =  await fetch(path);
  return data
}
{{- end }}

{{ define "responses" -}}
{{- $resp :=  firstOrDefault .Responses -}}
  {{- range $resp.Returns -}}
    {{ getType . }}
  {{- end -}}
{{- end }}


{{ define "ident" -}}
{{ .Name }}: {{ getType . }}
{{- end }}
