{{ define "service" }}
import { createStore } from 'redux'

{{ range .Resources }}
{{ .Name}} = "{{.Name}}"
{{ end}}

class {{.Name }}Client {
  constructor() {
    super( )
  }
  baseURL = "{{.BaseURL}}"
{{ range .Resources }}
  {{ template "endpoint" . }}
{{ end }}
}
{{ end }}




{{ define "endpoint" -}}

{{ .Name }}({{ range .Parameters }} {{template "ident" .}},{{ end }}) : {{ template "responses" . }}  {
  return {
    type: {{ .Name }},
    header: { {{ range .Parameters }} {{- if isFromLocation .Location "header" }} {{template "ident" .}},{{ end }} {{ end }} },
    query: { {{ range .Parameters }} {{- if isFromLocation .Location "query" }} {{template "ident" .}},{{ end }} {{ end }} },
    path: { {{ range .Parameters }} {{- if isFromLocation .Location "path" }} {{template "ident" .}},{{ end }} {{ end }} }
   }
}
{{- end }}

{{ define "responses" -}}
{{- $resp :=  firstOrDefault .Responses -}}
{{- range $resp.Returns -}}
{{ getType . }}
{{- end -}}
{{- end }}

{{ define "ident" -}}
{{ .Name }}: {{ getType . }}
{{- end }}
